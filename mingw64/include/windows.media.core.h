/*** Autogenerated by WIDL 10.15 from include/windows.media.core.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __windows_media_core_h__
#define __windows_media_core_h__

/* Forward declarations */

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource __x_ABI_CWindows_CMedia_CCore_CIMediaSource;
#ifdef __cplusplus
#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource ABI::Windows::Media::Core::IMediaSource
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaSource;
            }
        }
    }
}
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <inspectable.h>
#include <asyncinfo.h>
#include <eventtoken.h>
#include <windowscontracts.h>
#include <windows.foundation.h>
#include <windows.graphics.directx.direct3d11.h>
#include <windows.graphics.imaging.h>
#include <windows.media.h>
#include <windows.media.capture.h>
#include <windows.media.devices.h>
#include <windows.media.effects.h>
#include <windows.media.faceanalysis.h>
#include <windows.media.mediaproperties.h>
#include <windows.storage.h>
#include <windows.storage.fileproperties.h>
#include <windows.storage.streams.h>
#include <windows.ui.h>

#ifdef __cplusplus
extern "C" {
#endif

#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource __x_ABI_CWindows_CMedia_CCore_CIMediaSource;
#ifdef __cplusplus
#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource ABI::Windows::Media::Core::IMediaSource
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                interface IMediaSource;
            }
        }
    }
}
#endif /* __cplusplus */
#endif

/*****************************************************************************
 * IMediaSource interface
 */
#if !defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)
#define WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION 0xe0000
#endif // defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000
#ifndef ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_INTERFACE_DEFINED__

DEFINE_GUID(IID___x_ABI_CWindows_CMedia_CCore_CIMediaSource, 0xe7bfb599, 0xa09d, 0x4c21, 0xbc,0xdf, 0x20,0xaf,0x4f,0x86,0xb3,0xd9);
#if defined(__cplusplus) && !defined(CINTERFACE)
} /* extern "C" */
namespace ABI {
    namespace Windows {
        namespace Media {
            namespace Core {
                MIDL_INTERFACE("e7bfb599-a09d-4c21-bcdf-20af4f86b3d9")
                IMediaSource : public IInspectable
                {
                };
            }
        }
    }
}
extern "C" {
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(__x_ABI_CWindows_CMedia_CCore_CIMediaSource, 0xe7bfb599, 0xa09d, 0x4c21, 0xbc,0xdf, 0x20,0xaf,0x4f,0x86,0xb3,0xd9)
#endif
#else
typedef struct __x_ABI_CWindows_CMedia_CCore_CIMediaSourceVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource *This);

    /*** IInspectable methods ***/
    HRESULT (STDMETHODCALLTYPE *GetIids)(
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource *This,
        ULONG *iidCount,
        IID **iids);

    HRESULT (STDMETHODCALLTYPE *GetRuntimeClassName)(
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource *This,
        HSTRING *className);

    HRESULT (STDMETHODCALLTYPE *GetTrustLevel)(
        __x_ABI_CWindows_CMedia_CCore_CIMediaSource *This,
        TrustLevel *trustLevel);

    END_INTERFACE
} __x_ABI_CWindows_CMedia_CCore_CIMediaSourceVtbl;

interface __x_ABI_CWindows_CMedia_CCore_CIMediaSource {
    CONST_VTBL __x_ABI_CWindows_CMedia_CCore_CIMediaSourceVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource_AddRef(This) (This)->lpVtbl->AddRef(This)
#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource_Release(This) (This)->lpVtbl->Release(This)
/*** IInspectable methods ***/
#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource_GetIids(This,iidCount,iids) (This)->lpVtbl->GetIids(This,iidCount,iids)
#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource_GetRuntimeClassName(This,className) (This)->lpVtbl->GetRuntimeClassName(This,className)
#define __x_ABI_CWindows_CMedia_CCore_CIMediaSource_GetTrustLevel(This,trustLevel) (This)->lpVtbl->GetTrustLevel(This,trustLevel)
#else
/*** IUnknown methods ***/
static inline HRESULT __x_ABI_CWindows_CMedia_CCore_CIMediaSource_QueryInterface(__x_ABI_CWindows_CMedia_CCore_CIMediaSource* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static inline ULONG __x_ABI_CWindows_CMedia_CCore_CIMediaSource_AddRef(__x_ABI_CWindows_CMedia_CCore_CIMediaSource* This) {
    return This->lpVtbl->AddRef(This);
}
static inline ULONG __x_ABI_CWindows_CMedia_CCore_CIMediaSource_Release(__x_ABI_CWindows_CMedia_CCore_CIMediaSource* This) {
    return This->lpVtbl->Release(This);
}
/*** IInspectable methods ***/
static inline HRESULT __x_ABI_CWindows_CMedia_CCore_CIMediaSource_GetIids(__x_ABI_CWindows_CMedia_CCore_CIMediaSource* This,ULONG *iidCount,IID **iids) {
    return This->lpVtbl->GetIids(This,iidCount,iids);
}
static inline HRESULT __x_ABI_CWindows_CMedia_CCore_CIMediaSource_GetRuntimeClassName(__x_ABI_CWindows_CMedia_CCore_CIMediaSource* This,HSTRING *className) {
    return This->lpVtbl->GetRuntimeClassName(This,className);
}
static inline HRESULT __x_ABI_CWindows_CMedia_CCore_CIMediaSource_GetTrustLevel(__x_ABI_CWindows_CMedia_CCore_CIMediaSource* This,TrustLevel *trustLevel) {
    return This->lpVtbl->GetTrustLevel(This,trustLevel);
}
#endif
#ifdef WIDL_using_Windows_Media_Core
#define IID_IMediaSource IID___x_ABI_CWindows_CMedia_CCore_CIMediaSource
#define IMediaSourceVtbl __x_ABI_CWindows_CMedia_CCore_CIMediaSourceVtbl
#define IMediaSource __x_ABI_CWindows_CMedia_CCore_CIMediaSource
#define IMediaSource_QueryInterface __x_ABI_CWindows_CMedia_CCore_CIMediaSource_QueryInterface
#define IMediaSource_AddRef __x_ABI_CWindows_CMedia_CCore_CIMediaSource_AddRef
#define IMediaSource_Release __x_ABI_CWindows_CMedia_CCore_CIMediaSource_Release
#define IMediaSource_GetIids __x_ABI_CWindows_CMedia_CCore_CIMediaSource_GetIids
#define IMediaSource_GetRuntimeClassName __x_ABI_CWindows_CMedia_CCore_CIMediaSource_GetRuntimeClassName
#define IMediaSource_GetTrustLevel __x_ABI_CWindows_CMedia_CCore_CIMediaSource_GetTrustLevel
#endif /* WIDL_using_Windows_Media_Core */
#endif

#endif

#endif  /* ____x_ABI_CWindows_CMedia_CCore_CIMediaSource_INTERFACE_DEFINED__ */
#endif /* WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x10000 */

/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __windows_media_core_h__ */
