name: test-ci-artifacts

on:
  workflow_call:
    inputs:
      git-artifacts-extract-location:
        required: true
        type: string

env:
  LC_CTYPE: C.UTF-8

jobs:
  test-minimal-sdk:
    runs-on: windows-latest
    strategy:
      matrix:
        # 0..16 permuted according to the matrix builds' timings as of git/git@9fadedd63
        nr: [9, 6, 13, 0, 8, 5, 2, 16, 15, 11, 10, 1, 7, 3, 14, 12, 4]
    steps:
      - name: download minimal-sdk artifact
        uses: actions/download-artifact@v6
        with:
          name: minimal-sdk
          path: ${{github.workspace}}
      - name: uncompress minimal-sdk
        shell: bash
        run: |
          mkdir -p minimal-sdk &&
          tar -C minimal-sdk -xzf git-sdk-x86_64-minimal.tar.gz &&
          cygpath -aw minimal-sdk/usr/bin >>$GITHUB_PATH
      - name: download git artifacts
        uses: actions/download-artifact@v6
        with:
          name: git-artifacts
          path: ${{github.workspace}}
      - name: uncompress git-artifacts
        shell: bash
        env:
          GIT_ARTIFACTS_EXTRACT_LOCATION: ${{ inputs.git-artifacts-extract-location }}
        run: |
          mkdir -p "$GIT_ARTIFACTS_EXTRACT_LOCATION" &&
          tar -C "$GIT_ARTIFACTS_EXTRACT_LOCATION" -xzf git-artifacts.tar.gz
      - name: test
        shell: bash
        run: |
          set -x
          . /etc/profile
          test "$(cygpath -aw /)" = "${{github.workspace}}\minimal-sdk" || exit 1
          cd "$GIT_ARTIFACTS_EXTRACT_LOCATION"/git/t &&
          make T="$(ls -S t[0-9]*.sh | awk '!((NR+${{matrix.nr}})%17)' | tr '\n' \ )" prove || {
            for d in trash*
            do
              t=${d#trash directory.}
              echo ===========================
              echo Failed: $t.sh
              cat test-results/$t.out
            done
            exit 1
          }
        env:
          GIT_ARTIFACTS_EXTRACT_LOCATION: ${{ inputs.git-artifacts-extract-location }}
          GIT_TEST_OPTS: --verbose-log -x --no-chain-lint
          GIT_PROVE_OPTS: --timer --jobs 8
          NO_SVN_TESTS: 1
  assorted-validations:
    runs-on: windows-latest
    steps:
      - name: download minimal-sdk artifact
        uses: actions/download-artifact@v6
        with:
          name: minimal-sdk
          path: ${{github.workspace}}
      - name: uncompress minimal-sdk
        shell: bash
        run: |
          mkdir -p minimal-sdk &&
          tar -C minimal-sdk -xzf git-sdk-x86_64-minimal.tar.gz &&
          cygpath -aw minimal-sdk/usr/bin >>$GITHUB_PATH
      - name: run some tests
        shell: bash
        run: |
          set -x
          . /etc/profile

          # cygpath works
          test "$(cygpath -aw /)" = "${{github.workspace}}\minimal-sdk" || exit 1

          # comes with GCC and can compile a DLL
          test "$(type -p gcc)" = "/mingw64/bin/gcc" || exit 1
          cat >dll.c <<-\EOF &&
          __attribute__((dllexport)) int increment(int i)
          {
              return i + 1;
          }
          EOF

          gcc -Wall -g -O2 -shared -o sample.dll dll.c || exit 1
          ls -la

          # stat works
          test "stat is /usr/bin/stat" = "$(type stat)" || exit 1
          stat /usr/bin/stat.exe || exit 1

          # unzip works
          test "unzip is /usr/bin/unzip" = "$(type unzip)" || exit 1
          git init unzip-test &&
          echo TEST >unzip-test/README &&
          git -C unzip-test add -A &&
          git -C unzip-test -c user.name=A -c user.email=b@c.d commit -m 'Testing, testing...' &&
          git --git-dir=unzip-test/.git archive -o test.zip HEAD &&
          unzip -v test.zip >unzip-test.out &&
          cat unzip-test.out &&
          test "grep is /usr/bin/grep" = "$(type grep)" || exit 1
          grep README unzip-test.out

